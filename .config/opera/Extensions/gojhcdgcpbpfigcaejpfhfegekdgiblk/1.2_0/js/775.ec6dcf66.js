"use strict";(self["webpackChunkdesktop_wallet"]=self["webpackChunkdesktop_wallet"]||[]).push([[775],{90775:function(t,e,s){s.r(e),s.d(e,{default:function(){return g}});var r=function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",[r("top-bar",{attrs:{title:t.$t("general.confirm"),"test-parent-name":"swap_confirm"}}),r("div",{staticClass:"p-4"},[r("div",{staticClass:"bg-neutral-03 p-4 rounded-tl-lg rounded-tr-lg"},[r("div",{staticClass:"flex flex-col justify-center items-center"},[r("div",{staticClass:"flex flex-row justify-center items-center"},[r("token-icon",{staticClass:"w-10 h-10 my-2",attrs:{chain:t.chain,address:t.fromTokenAddress}}),r("i",{staticClass:"icon-arrow_right text-brand-primary mx-4"}),r("token-icon",{staticClass:"w-10 h-10 my-2",attrs:{chain:t.chain,address:t.toTokenAddress}})],1),r("div",{staticClass:"text-2xl"},[t._v(" "+t._s(t.formatNumber(t.toTokenAmount))+" "+t._s(t.currentSwap.toToken.symbol)+" ")]),t.fiatAmount>0?r("div",[t._v(" "+t._s(t.localizeCurrency(t.fiatAmount))+" ")]):t._e(),r("div",{staticClass:"border-b border-neutral-05 border-dashed w-full my-4"}),r("div",{staticClass:"flex w-full mb-4"},[t._m(0),r("div",{staticClass:"w-full ms-4"},[r("div",{staticClass:"font-bold mb-1"},[t._v(t._s(t.$t("general.rate")))]),r("div",{staticClass:"text-sm"},[t._v(" "+t._s(t.conversion)+" ")])])]),r("div",{staticClass:"flex w-full mb-4"},[t._m(1),r("div",{staticClass:"w-full ms-4"},[r("div",{staticClass:"font-bold mb-1"},[t._v(t._s(t.$t("general.maxSlippage")))]),r("div",{staticClass:"text-sm"},[t._v("1%")])])]),r("div",{staticClass:"flex w-full"},[t._m(2),t.tx&&null!==t.fee?r("div",{staticClass:"w-full ms-4"},[r("div",{staticClass:"font-bold mb-1"},[t._v(t._s(t.$t("general.transactionFee")))]),r("div",{class:["text-sm",{"text-spectrum-red":t.insufficientFunds}]},[t._v(" "+t._s(t.transactionFee)+" ")])]):t._e()]),t.isFeeZero?r("div",{staticClass:"flex items-center w-full"},[t._m(3),r("div",{staticClass:"text-spectrum-red text-sm w-full ms-4 mt-2.5"},[t._v(" "+t._s(t.$t("errors.cannotEstimateGas"))+" ")])]):t._e()])]),t._m(4),r("div",{staticClass:"bg-neutral-03 p-4 rounded-bl-lg rounded-br-lg flex justify-between"},[r("div",{staticClass:"font-bold"},[t._v(t._s(t.$t("general.total")))]),r("div",{staticClass:"text-brand-primary"},[r("span",[t._v(t._s(t.localizeCurrency(t.totalFiatAmount)))])])]),r("div",{staticClass:"mt-5"},[t.error?r("div",{staticClass:"text-spectrum-red text-sm text-center my-4 flex justify-center"},[r("img",{staticClass:"mx-2",attrs:{src:s(98498),alt:""}}),r("span",[t._v(t._s(t.error))])]):t._e(),r("primary-button",{staticClass:"t-swap_confirm-swap w-full",attrs:{loading:t.loading,disabled:t.loading||!!t.error,title:t.$t("general.swap")},on:{click:t.confirmTransaction}})],1)])],1)},i=[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("span",{staticClass:"icon-wrapper"},[s("i",{staticClass:"icon-coupon info-icon",staticStyle:{"font-size":"16px"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("span",{staticClass:"icon-wrapper"},[s("i",{staticClass:"icon-slippage info-icon"})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("span",{staticClass:"icon-wrapper"},[s("i",{staticClass:"icon-currency info-icon"})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("span",{staticClass:"icon-wrapper"},[s("i",{staticClass:"icon-error text-spectrum-red"})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"bg-neutral-03 flex justify-between items-center -my-2"},[s("div",{staticClass:"half-circle-left"}),s("div",{staticClass:"border-b border-neutral-05 border-dashed w-full"}),s("div",{staticClass:"half-circle-right"})])}],n=s(70794),a=s(87307),o=s(56258),c=s(53106),l=s(74293),u=s(4634),m=s(98180),d=s(98360),f=s(25108),h={components:{TopBar:l.Z,PrimaryButton:a.Z,TokenIcon:c.Z},props:{swap:{type:Object,default:void 0},chain:{type:Object,default:void 0}},data(){return{loading:!1,error:null,success:!1,tx:null,fee:null}},computed:{currentSwap(){return this.swap.length?this.swap:this.$store.getters.currentSwap},fromTokenAmount(){return m.Z.withDecimals(this.currentSwap.fromTokenAmount,this.currentSwap.fromToken.decimals)},toTokenAmount(){return m.Z.withDecimals(this.currentSwap.toTokenAmount,this.currentSwap.toToken.decimals)},fiatAmount(){const t=this.getPriceForToken(this.currentSwap.toToken);return this.toTokenAmount.multipliedBy(t)},transactionFee(){if(!this.tx)return;const[t,e]=[this.formatNumber(this.fee),this.localizeCurrency(this.feeFiat)];return`~ ${t} ${this.feeSymbol} (${e})`},feeFiat(){if(!this.fee)return;const t=this.$store.getters.matchingNativeToken("",this.chain),e=this.getPriceForToken(t);return this.formatNumber(this.fee).multipliedBy(new n.Z(e))},feeSymbol(){const t=this.$store.getters.matchingNativeToken("",this.chain);return t?t.contract.symbol.toUpperCase():""},isFeeZero(){if(null!==this.fee)return this.fee.isEqualTo(0)},totalFiatAmount(){return this.fiatAmount.plus(this.feeFiat)},conversion(){if(!this.currentSwap)return null;const t=this.currentSwap.fromToken.symbol,e=this.toTokenAmount.dividedBy(this.fromTokenAmount),s=this.currentSwap.toToken.symbol;return`1 ${t} â‰ˆ ${u.ZP.formatNumber(e)} ${s}`},fromTokenAddress(){return this.currentSwap.fromToken?.address},toTokenAddress(){return this.currentSwap.toToken?.address},insufficientFunds(){return this.$store.getters.txError.insufficientFunds},txNetwork(){return this.$store.getters.getTransactionNetwork(this.chain)}},watch:{insufficientFunds(t){t&&(this.error=this.$t("errors.generic.insufficientFunds"))}},async mounted(){await this.setupTx(),this.setSwapTxFee()},beforeDestroy(){this.$store.dispatch("clearTxError")},methods:{localizeCurrency:u.ZP.localizeCurrency,formatNumber:u.ZP.formatNumber,setSwapTxFee(){const t=this.tx.token;this.fee=m.Z.withDecimals(t.amount,t.decimals),this.isTransactionFeeCovered(this.fee)||this.$store.dispatch("setTxError","insufficientFunds")},async setupTx(){this.loading=!0;try{const t=this.currentSwap.tx,e={from:this.$store.getters.ethereumAddress,data:t.data,gas:(0,d.zv)(parseInt(t.gas??t.gasLimit)),gasPrice:(0,d.zv)(t.gasPrice?.toString()),to:t.to,value:(0,d.zv)(t.value?.toString())};this.tx=await this.$wallet.createSwapTransaction(this.chain,e)}catch(t){this.getErrorMessage(t)}this.loading=!1},async confirmTransaction(){if(this.error)return;let t;o.Z.sendStatsEvent(o.Z.types.CLICK,"wt_swap_confirm_next"),this.loading=!0;try{t=await this.$wallet.confirmTransaction(this.tx.txId),this.success=!0,this.sendDetailedSwapTxStats(),this.$router.replace({name:"TransactionComplete",params:{token:this.currentSwap.fromToken,txHash:t}})}catch(e){this.$store.getters.authAborted?o.Z.sendStatsEvent(o.Z.types.CLICK,"wt_swap_pwd_can"):(this.getErrorMessage(e),o.Z.sendStatsEvent(o.Z.types.CLICK,"wt_swap_pwd_fail"))}finally{if(this.loading=!1,this.success){const e=this.currentSwap,s={chain:e.fromToken.chain,contract:e.fromToken.address,from:e.tx.from,hash:t,time:Date.now(),to:e.tx.to,type:e.fromToken.type,value:this.swap.fromTokenAmount};this.$store.dispatch("addPendingTransaction",s)}}},getErrorMessage(t){f.error(t),this.error=this.$t("errors.generic.unknownError")},getPriceForToken(t){return t?this.$store.getters.getPriceForToken(t):0},isTransactionFeeCovered(t){const e=this.currentSwap.fromToken.symbol,s={fee:t,symbol:e,amount:this.fromTokenAmount,chain:this.chain};return this.$store.getters.isTransactionFeeCovered(s)},sendDetailedSwapTxStats(){o.Z.sendStatsEvent(o.Z.types.CLICK,"wt_swap_pwd_suc",{volumeUSD:(0,n.Z)(this.fromTokenAmount).multipliedBy(this.$store.getters.getPriceForToken(this.currentSwap.fromToken)).toString(),fromCoin:this.currentSwap.fromToken.symbol,fromNetwork:this.txNetwork.name,fromAmount:this.fromTokenAmount.toString(),toCoin:this.currentSwap.toToken.symbol,toNetwork:this.txNetwork.name,toAmount:this.toTokenAmount.toString()})}}},p=h,w=s(1001),v=(0,w.Z)(p,r,i,!1,null,"0c61a6d1",null),g=v.exports}}]);