"use strict";(self["webpackChunkdesktop_wallet"]=self["webpackChunkdesktop_wallet"]||[]).push([[7],{16007:function(t,e,s){s.r(e),s.d(e,{default:function(){return g}});var r=function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",[r("top-bar",{attrs:{title:t.$t("general.confirmation"),"test-parent-name":"approve_confirm"}}),r("div",{staticClass:"px-4 py-4"},[r("div",{staticClass:"mx-10 flex flex-col justify-center items-center"},[r("div",{staticClass:"flex flex-row justify-center items-center"},[r("token-icon",{staticClass:"w-10 h-10 my-2",attrs:{chain:t.chain,address:t.toAddress,"icon-uri":t.token.token.iconURI}})],1),r("div",{staticClass:"flex flex-col justify-center items-center"},[r("div",{staticClass:"py-4 text-2xl text-center font-bold"},[r("i18n",{attrs:{path:"views.approveConfirm.allowToSpend",tag:"p"},scopedSlots:t._u([{key:"symbol",fn:function(){return[r("span",[t._v(t._s(t.symbol))])]},proxy:!0},{key:"swapProvider",fn:function(){return[r("span",[t._v(t._s(t.swapProvider))])]},proxy:!0}])})],1),r("div",{staticClass:"py-4"},[r("i18n",{attrs:{path:"views.approveConfirm.allowToWithdraw",tag:"p"},scopedSlots:t._u([{key:"symbol",fn:function(){return[r("span",[t._v(t._s(t.symbol))])]},proxy:!0},{key:"swapProviderLink",fn:function(){return[r("a",{staticClass:"text-brand-primary",attrs:{target:"_blank",rel:"noopener noreferrer",href:t.swapProviderLink}},[t._v(" "+t._s(t.swapProviderLink)+" ")])]},proxy:!0}])})],1)]),r("div",{staticClass:"w-full border-b bg-brand-primary border-opacity-10"}),r("div",{staticClass:"flex items-center w-full py-4"},[t._m(0),t.tx&&null!==t.fee?r("div",{staticClass:"w-full ms-4"},[r("div",{staticClass:"font-bold mb-1"},[t._v(t._s(t.$t("general.transactionFee")))]),r("div",{class:["text-sm",{"text-spectrum-red":t.insufficientFunds}]},[t._v(" "+t._s(t.transactionFee)+" ")])]):t._e()]),t.isFeeZero?r("div",{staticClass:"text-spectrum-red"},[t._v(" "+t._s(t.$t("errors.cannotEstimateGas"))+" ")]):t._e()]),t.error?r("div",{staticClass:"text-spectrum-red text-sm text-center my-4 flex justify-center"},[r("img",{staticClass:"mx-2",attrs:{src:s(98498),alt:""}}),r("span",[t._v(t._s(t.error))])]):t._e(),r("div",{staticClass:"flex space-x-4"},[r("outlined-button",{staticClass:"t-approve_confirm-reject w-1/2 mt-8",attrs:{loading:t.loading,disabled:t.loading,title:t.$t("general.reject")},on:{click:t.back}}),r("primary-button",{staticClass:"t-approve_confirm-approve w-1/2 mt-8",attrs:{loading:t.loading,disabled:t.loading||!t.tx||!!t.error,title:t.$t("general.approve")},on:{click:t.approveTx}})],1)])],1)},i=[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("span",{staticClass:"icon-wrapper text-brand-primary"},[s("i",{staticClass:"icon-currency info-icon",staticStyle:{"font-size":"32px"}})])}],a=s(74293),n=s(87307),o=s(13655),c=s(53106),l=s(4634),u=s(98180),p=s(70794),d=s(98360),h=s(25108),f={components:{TopBar:a.Z,TokenIcon:c.Z,PrimaryButton:n.Z,OutlinedButton:o.Z},props:{approve:{type:Object,default:void 0},contract:{type:Object,default:void 0},swapProvider:{type:String,default:""},swapProviderLink:{type:String,default:"about:blank"},token:{type:Object,default:void 0}},data(){return{error:null,fee:null,loading:!1,success:!1,tx:null}},computed:{chain(){return this.token.token.chain},contractName(){return this.contract.name},feeFiat(){if(!this.fee)return;const t=this.$store.getters.matchingNativeToken("",this.chain),e=this.getPriceForToken(t);return this.formatNumber(this.fee).multipliedBy(new p.Z(e))},feeSymbol(){const t=this.$store.getters.matchingNativeToken("",this.chain);return t?t.contract.symbol.toUpperCase():""},insufficientFunds(){return this.$store.getters.txError.insufficientFunds},isFeeZero(){if(null!==this.fee)return this.fee.isEqualTo(0)},symbol(){return this.token.token.symbol},toAddress(){return this.approve.to},transactionFee(){if(!this.tx)return;const[t,e]=[this.formatNumber(this.fee),this.localizeCurrency(this.feeFiat)];return`~ ${t} ${this.feeSymbol} (${e})`}},watch:{insufficientFunds(t){t&&(this.error=this.$t("errors.generic.insufficientFunds"))}},async mounted(){await this.setupTx(),this.setSwapTxFee()},methods:{localizeCurrency:l.ZP.localizeCurrency,formatNumber:l.ZP.formatNumber,setSwapTxFee(){const t=this.tx.token;this.fee=u.Z.withDecimals(t.amount,t.decimals),this.isTransactionFeeCovered(this.fee)||this.$store.dispatch("setTxError","insufficientFunds")},async setupTx(){this.loading=!0;try{const t=this.approve,e={from:this.$store.getters.ethereumAddress,to:t.to,value:(0,d.zv)(t.value?.toString()),gasPrice:(0,d.zv)(t.gasPrice?.toString()),data:t.data};this.tx=await this.$wallet.createSwapTransaction(this.chain,e)}catch(t){this.getErrorMessage(t)}this.loading=!1},async approveTx(){this.loading=!0;try{const t=await this.$wallet.confirmTransaction(this.tx.txId);await this.$store.dispatch("setPendingApproval",Object.assign({timeStamp:Date.now(),token:this.token.token,txHash:t})),this.back()}catch(t){this.$store.getters.authAborted||this.getErrorMessage(t)}this.loading=!1},back(){this.$router.back()},getErrorMessage(t){h.error(t),this.error=this.$t("errors.generic.unknownError")},getPriceForToken(t){return t?this.$store.getters.getPriceForToken(t):0},isTransactionFeeCovered(t){const e=this.symbol,s={fee:t,symbol:e,amount:this.approve.value,chain:this.chain};return this.$store.getters.isTransactionFeeCovered(s)}}},m=f,v=s(1001),y=(0,v.Z)(m,r,i,!1,null,null,null),g=y.exports}}]);